plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.barclays'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.3.0'
	testImplementation 'io.rest-assured:rest-assured:5.5.6'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Integration Tests

sourceSets {
	integrationTest {
		java {
			compileClasspath += sourceSets.main.output + sourceSets.test.output
			runtimeClasspath += sourceSets.main.output + sourceSets.test.output
			srcDir file('src/integrationTest/java')
		}
		resources.srcDir file('src/integrationTest/resources')
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.register('integrationTest', Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	shouldRunAfter test
	useJUnitPlatform() 
}

// Acceptance Tests

sourceSets {
	acceptanceTest {
		java {
			compileClasspath += sourceSets.main.output + sourceSets.test.output
			runtimeClasspath += sourceSets.main.output + sourceSets.test.output
			srcDir file('src/acceptanceTest/java')
		}
		resources.srcDir file('src/acceptanceTest/resources')
	}
}

configurations {
	acceptanceTestImplementation.extendsFrom testImplementation
	acceptanceTestRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.register('acceptanceTest', Test) {
	description = 'Runs acceptance tests.'
	group = 'verification'

	testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
	classpath = sourceSets.acceptanceTest.runtimeClasspath

	shouldRunAfter test
	useJUnitPlatform() 
}

